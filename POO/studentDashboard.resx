<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAE0AAABNCAYAAADjCemwAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAu
        IgAALiIBquLdkgAAAaRJREFUeF7tljFKBEEUBddMz2BiauwNPI1exETMTYzEsxh6FEPDtsd9C83y9o+v
        WcGFKqjk85igkp5Naw1D7RFr7RFr7RFr3fG6+4Htvev62Gg3XWjtq+v6EK2AaBMQbQKiTUC0CYg2QRTt
        rHuB7bzr+thouKI9Yq09Yq07XnYfsT10XR8bjddzC78cExBtAqJNQLQJiDYB0SaIouGK9oi19oi19oi1
        7rj2ELx1x/1nt2LcLh6T9NvJ/qivJ9HMkWhbiCaSPdFEsieaSPYnEe2pu7/deYjf7nYke6KJZE80keyJ
        JpI90USyJ5pI9kQTyf4kos2QfjvZE00ke6KJZE80keyJJpI90USy/1fR/tI1kj3RRLInmkj2RBPJ/qQe
        gnF7txwKxu3iGsmeaCLZE00ke6KJZE80keyJJpI90USyJ5pI9kQTyZ5oItkTTSR7oolkTzSR7Ikmkj3R
        RLInmkj2RBPJnmgi2RNNJPso2lX3tfC+O+6fu263c9wuus3ouL3V7ZDjdtFtRpP9S3d//6M9Yq09Yq09
        Yq09Yq09Yq09YmXbfANeVt1dHX/+vAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="guna2CirclePictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>